function cov_ed3inzed8(){var path="/vagrant/continuum/core/src/common/models/PreEvaluation.js";var hash="aba5ee15113c268faf758e6876f28cd00ea442f7";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/vagrant/continuum/core/src/common/models/PreEvaluation.js",statementMap:{"0":{start:{line:1,column:0},end:{line:80,column:4}},"1":{start:{line:2,column:26},end:{line:76,column:5}},"2":{start:{line:79,column:4},end:{line:79,column:25}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:1,column:17},end:{line:1,column:18}},loc:{start:{line:1,column:48},end:{line:80,column:3}},line:1}},branchMap:{},s:{"0":0,"1":0,"2":0},f:{"0":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"aba5ee15113c268faf758e6876f28cd00ea442f7"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_ed3inzed8=function(){return actualCoverage;};}return actualCoverage;}cov_ed3inzed8();cov_ed3inzed8().s[0]++;module.exports=function(sequelize,DataTypes){cov_ed3inzed8().f[0]++;const PreEvaluation=(cov_ed3inzed8().s[1]++,sequelize.define('PreEvaluation',{id:{allowNull:false,autoIncrement:true,primaryKey:true,type:DataTypes.INTEGER},channel:{type:DataTypes.STRING},rut:{type:DataTypes.STRING},income:{type:DataTypes.FLOAT},vehiclePrice:{type:DataTypes.FLOAT},monthlyPayment:{type:DataTypes.FLOAT},vehicleYear:{type:DataTypes.INTEGER},vehicleType:{type:DataTypes.STRING},term:{type:DataTypes.FLOAT},downPayment:{type:DataTypes.FLOAT},nationality:{type:DataTypes.STRING},workType:{type:DataTypes.STRING},workEntryDate:{type:DataTypes.INTEGER},tradeInCarValue:{type:DataTypes.INTEGER},brandName:{type:DataTypes.STRING},lastname:{type:DataTypes.STRING},phone:{type:DataTypes.STRING},email:{type:DataTypes.STRING},rawResponseEquifax:{type:DataTypes.JSON,allowNull:false},rawResponseWic:{type:DataTypes.JSON,allowNull:false}},{timestamps:true,paranoid:true,tableName:'PreEvaluation'}));cov_ed3inzed8().s[2]++;return PreEvaluation;};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlByZUV2YWx1YXRpb24uanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIlByZUV2YWx1YXRpb24iLCJkZWZpbmUiLCJpZCIsImFsbG93TnVsbCIsImF1dG9JbmNyZW1lbnQiLCJwcmltYXJ5S2V5IiwidHlwZSIsIklOVEVHRVIiLCJjaGFubmVsIiwiU1RSSU5HIiwicnV0IiwiaW5jb21lIiwiRkxPQVQiLCJ2ZWhpY2xlUHJpY2UiLCJtb250aGx5UGF5bWVudCIsInZlaGljbGVZZWFyIiwidmVoaWNsZVR5cGUiLCJ0ZXJtIiwiZG93blBheW1lbnQiLCJuYXRpb25hbGl0eSIsIndvcmtUeXBlIiwid29ya0VudHJ5RGF0ZSIsInRyYWRlSW5DYXJWYWx1ZSIsImJyYW5kTmFtZSIsImxhc3RuYW1lIiwicGhvbmUiLCJlbWFpbCIsInJhd1Jlc3BvbnNlRXF1aWZheCIsIkpTT04iLCJyYXdSZXNwb25zZVdpYyIsInRpbWVzdGFtcHMiLCJwYXJhbm9pZCIsInRhYmxlTmFtZSJdLCJtYXBwaW5ncyI6Inc2QkFlWTtnSEFmWkEsTUFBTSxDQUFDQyxPQUFQLENBQWlCLFNBQVNDLFNBQVQsQ0FBb0JDLFNBQXBCLENBQStCLHdCQUM1QyxLQUFNQyxDQUFBQSxhQUFhLHlCQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FDcEIsZUFEb0IsQ0FFcEIsQ0FDRUMsRUFBRSxDQUFFLENBQ0ZDLFNBQVMsQ0FBRSxLQURULENBRUZDLGFBQWEsQ0FBRSxJQUZiLENBR0ZDLFVBQVUsQ0FBRSxJQUhWLENBSUZDLElBQUksQ0FBRVAsU0FBUyxDQUFDUSxPQUpkLENBRE4sQ0FPRUMsT0FBTyxDQUFFLENBQ1BGLElBQUksQ0FBRVAsU0FBUyxDQUFDVSxNQURULENBUFgsQ0FVRUMsR0FBRyxDQUFFLENBQ0hKLElBQUksQ0FBRVAsU0FBUyxDQUFDVSxNQURiLENBVlAsQ0FhRUUsTUFBTSxDQUFFLENBQ05MLElBQUksQ0FBRVAsU0FBUyxDQUFDYSxLQURWLENBYlYsQ0FnQkVDLFlBQVksQ0FBRSxDQUNWUCxJQUFJLENBQUVQLFNBQVMsQ0FBQ2EsS0FETixDQWhCaEIsQ0FtQkVFLGNBQWMsQ0FBRSxDQUNaUixJQUFJLENBQUVQLFNBQVMsQ0FBQ2EsS0FESixDQW5CbEIsQ0FzQkVHLFdBQVcsQ0FBRSxDQUNUVCxJQUFJLENBQUVQLFNBQVMsQ0FBQ1EsT0FEUCxDQXRCZixDQXlCRVMsV0FBVyxDQUFFLENBQ1RWLElBQUksQ0FBRVAsU0FBUyxDQUFDVSxNQURQLENBekJmLENBNEJFUSxJQUFJLENBQUUsQ0FDRlgsSUFBSSxDQUFFUCxTQUFTLENBQUNhLEtBRGQsQ0E1QlIsQ0ErQkVNLFdBQVcsQ0FBRSxDQUNUWixJQUFJLENBQUVQLFNBQVMsQ0FBQ2EsS0FEUCxDQS9CZixDQWtDRU8sV0FBVyxDQUFFLENBQ1RiLElBQUksQ0FBRVAsU0FBUyxDQUFDVSxNQURQLENBbENmLENBcUNFVyxRQUFRLENBQUUsQ0FDTmQsSUFBSSxDQUFFUCxTQUFTLENBQUNVLE1BRFYsQ0FyQ1osQ0F3Q0VZLGFBQWEsQ0FBRSxDQUNYZixJQUFJLENBQUVQLFNBQVMsQ0FBQ1EsT0FETCxDQXhDakIsQ0EyQ0VlLGVBQWUsQ0FBRSxDQUNiaEIsSUFBSSxDQUFFUCxTQUFTLENBQUNRLE9BREgsQ0EzQ25CLENBOENFZ0IsU0FBUyxDQUFFLENBQ1BqQixJQUFJLENBQUVQLFNBQVMsQ0FBQ1UsTUFEVCxDQTlDYixDQWlERWUsUUFBUSxDQUFFLENBQ05sQixJQUFJLENBQUVQLFNBQVMsQ0FBQ1UsTUFEVixDQWpEWixDQW9ERWdCLEtBQUssQ0FBRSxDQUNIbkIsSUFBSSxDQUFFUCxTQUFTLENBQUNVLE1BRGIsQ0FwRFQsQ0F1REVpQixLQUFLLENBQUUsQ0FDSHBCLElBQUksQ0FBRVAsU0FBUyxDQUFDVSxNQURiLENBdkRULENBMERFa0Isa0JBQWtCLENBQUUsQ0FDbEJyQixJQUFJLENBQUVQLFNBQVMsQ0FBQzZCLElBREUsQ0FFbEJ6QixTQUFTLENBQUUsS0FGTyxDQTFEdEIsQ0E4REUwQixjQUFjLENBQUUsQ0FDWnZCLElBQUksQ0FBRVAsU0FBUyxDQUFDNkIsSUFESixDQUVaekIsU0FBUyxDQUFFLEtBRkMsQ0E5RGxCLENBRm9CLENBcUVwQixDQUNFMkIsVUFBVSxDQUFFLElBRGQsQ0FFRUMsUUFBUSxDQUFFLElBRlosQ0FHRUMsU0FBUyxDQUFFLGVBSGIsQ0FyRW9CLENBQUgsQ0FBbkIsQ0FENEMsdUJBOEU1QyxNQUFPaEMsQ0FBQUEsYUFBUCxDQUNELENBL0VIIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihzZXF1ZWxpemUsIERhdGFUeXBlcykge1xyXG4gICAgY29uc3QgUHJlRXZhbHVhdGlvbiA9IHNlcXVlbGl6ZS5kZWZpbmUoXHJcbiAgICAgICdQcmVFdmFsdWF0aW9uJyxcclxuICAgICAge1xyXG4gICAgICAgIGlkOiB7XHJcbiAgICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxyXG4gICAgICAgICAgYXV0b0luY3JlbWVudDogdHJ1ZSxcclxuICAgICAgICAgIHByaW1hcnlLZXk6IHRydWUsXHJcbiAgICAgICAgICB0eXBlOiBEYXRhVHlwZXMuSU5URUdFUixcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNoYW5uZWw6IHtcclxuICAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBydXQ6IHtcclxuICAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBpbmNvbWU6IHtcclxuICAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5GTE9BVCxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHZlaGljbGVQcmljZToge1xyXG4gICAgICAgICAgICB0eXBlOiBEYXRhVHlwZXMuRkxPQVQsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBtb250aGx5UGF5bWVudDoge1xyXG4gICAgICAgICAgICB0eXBlOiBEYXRhVHlwZXMuRkxPQVQsXHJcbiAgICAgICAgfSxcclxuICAgICAgICB2ZWhpY2xlWWVhcjoge1xyXG4gICAgICAgICAgICB0eXBlOiBEYXRhVHlwZXMuSU5URUdFUixcclxuICAgICAgICB9LFxyXG4gICAgICAgIHZlaGljbGVUeXBlOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICAgICAgfSxcclxuICAgICAgICB0ZXJtOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5GTE9BVCxcclxuICAgICAgICB9LFxyXG4gICAgICAgIGRvd25QYXltZW50OiB7XHJcbiAgICAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5GTE9BVCxcclxuICAgICAgICB9LFxyXG4gICAgICAgIG5hdGlvbmFsaXR5OiB7XHJcbiAgICAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICAgICAgfSxcclxuICAgICAgICB3b3JrVHlwZToge1xyXG4gICAgICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgd29ya0VudHJ5RGF0ZToge1xyXG4gICAgICAgICAgICB0eXBlOiBEYXRhVHlwZXMuSU5URUdFUixcclxuICAgICAgICB9LFxyXG4gICAgICAgIHRyYWRlSW5DYXJWYWx1ZToge1xyXG4gICAgICAgICAgICB0eXBlOiBEYXRhVHlwZXMuSU5URUdFUixcclxuICAgICAgICB9LFxyXG4gICAgICAgIGJyYW5kTmFtZToge1xyXG4gICAgICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbGFzdG5hbWU6IHtcclxuICAgICAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHBob25lOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbWFpbDoge1xyXG4gICAgICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcmF3UmVzcG9uc2VFcXVpZmF4OiB7XHJcbiAgICAgICAgICB0eXBlOiBEYXRhVHlwZXMuSlNPTixcclxuICAgICAgICAgIGFsbG93TnVsbDogZmFsc2VcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJhd1Jlc3BvbnNlV2ljOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5KU09OLFxyXG4gICAgICAgICAgICBhbGxvd051bGw6IGZhbHNlXHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgdGltZXN0YW1wczogdHJ1ZSxcclxuICAgICAgICBwYXJhbm9pZDogdHJ1ZSxcclxuICAgICAgICB0YWJsZU5hbWU6ICdQcmVFdmFsdWF0aW9uJyxcclxuICAgICAgfSxcclxuICAgICk7XHJcbiAgXHJcbiAgXHJcbiAgICByZXR1cm4gUHJlRXZhbHVhdGlvbjtcclxuICB9OyJdfQ==