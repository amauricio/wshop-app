function cov_1z76wfhkig(){var path="/vagrant/continuum/core/src/common/models/CustomerData.js";var hash="c27f48f5618c9bb8ca3460e4bf50d839c12cd151";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/vagrant/continuum/core/src/common/models/CustomerData.js",statementMap:{"0":{start:{line:1,column:25},end:{line:1,column:63}},"1":{start:{line:3,column:0},end:{line:84,column:2}},"2":{start:{line:4,column:23},end:{line:68,column:3}},"3":{start:{line:69,column:2},end:{line:73,column:4}},"4":{start:{line:70,column:4},end:{line:72,column:7}},"5":{start:{line:74,column:2},end:{line:76,column:5}},"6":{start:{line:77,column:2},end:{line:79,column:5}},"7":{start:{line:80,column:2},end:{line:82,column:5}},"8":{start:{line:83,column:2},end:{line:83,column:22}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:3,column:17},end:{line:3,column:18}},loc:{start:{line:3,column:43},end:{line:84,column:1}},line:3},"1":{name:"(anonymous_1)",decl:{start:{line:69,column:27},end:{line:69,column:28}},loc:{start:{line:69,column:39},end:{line:73,column:3}},line:69},"2":{name:"(anonymous_2)",decl:{start:{line:74,column:28},end:{line:74,column:29}},loc:{start:{line:74,column:38},end:{line:76,column:3}},line:74},"3":{name:"(anonymous_3)",decl:{start:{line:77,column:28},end:{line:77,column:29}},loc:{start:{line:77,column:38},end:{line:79,column:3}},line:77},"4":{name:"(anonymous_4)",decl:{start:{line:80,column:26},end:{line:80,column:27}},loc:{start:{line:80,column:36},end:{line:82,column:3}},line:80}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c27f48f5618c9bb8ca3460e4bf50d839c12cd151"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1z76wfhkig=function(){return actualCoverage;};}return actualCoverage;}cov_1z76wfhkig();const clearCHLIDFormat=(cov_1z76wfhkig().s[0]++,require('../helpers/clearCHLIDFormat'));cov_1z76wfhkig().s[1]++;module.exports=(sequelize,DataTypes)=>{cov_1z76wfhkig().f[0]++;const CustomerData=(cov_1z76wfhkig().s[2]++,sequelize.define('CustomerData',{identificationValue:{type:DataTypes.STRING,allowNull:false},identificationTypeId:{type:DataTypes.INTEGER,allowNull:true},documentSerialNumber:{type:DataTypes.STRING,allowNull:true},name:{type:DataTypes.STRING,allowNull:true},lastName:{type:DataTypes.STRING,allowNull:true},motherLastName:{type:DataTypes.STRING,allowNull:true},email:{type:DataTypes.STRING,allowNull:true},phone:{type:DataTypes.STRING,allowNull:true},address:{type:DataTypes.STRING,allowNull:true},latLong:{type:DataTypes.ARRAY(DataTypes.DOUBLE),allowNull:true},dob:{type:DataTypes.DATEONLY,allowNull:true},nationality:{type:DataTypes.STRING,allowNull:true},geographicDataId:{type:DataTypes.STRING,allowNull:true},gender:{type:DataTypes.ENUM('MALE','FEMALE','OTHER'),allowNull:true}},{timestamps:true,paranoid:true}));cov_1z76wfhkig().s[3]++;CustomerData.associate=models=>{cov_1z76wfhkig().f[1]++;cov_1z76wfhkig().s[4]++;models.CustomerDataPgModel.belongsTo(models.IdentificationTypePgModel,{foreignKey:'identificationTypeId'});};cov_1z76wfhkig().s[5]++;CustomerData.beforeCreate(data=>{//data.identificationValue = clearCHLIDFormat(data.identificationValue);
cov_1z76wfhkig().f[2]++;});cov_1z76wfhkig().s[6]++;CustomerData.beforeUpdate(data=>{//data.identificationValue = clearCHLIDFormat(data.identificationValue);
cov_1z76wfhkig().f[3]++;});cov_1z76wfhkig().s[7]++;CustomerData.beforeSave(data=>{//data.identificationValue = clearCHLIDFormat(data.identificationValue);
cov_1z76wfhkig().f[4]++;});cov_1z76wfhkig().s[8]++;return CustomerData;};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkN1c3RvbWVyRGF0YS5qcyJdLCJuYW1lcyI6WyJjbGVhckNITElERm9ybWF0IiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJDdXN0b21lckRhdGEiLCJkZWZpbmUiLCJpZGVudGlmaWNhdGlvblZhbHVlIiwidHlwZSIsIlNUUklORyIsImFsbG93TnVsbCIsImlkZW50aWZpY2F0aW9uVHlwZUlkIiwiSU5URUdFUiIsImRvY3VtZW50U2VyaWFsTnVtYmVyIiwibmFtZSIsImxhc3ROYW1lIiwibW90aGVyTGFzdE5hbWUiLCJlbWFpbCIsInBob25lIiwiYWRkcmVzcyIsImxhdExvbmciLCJBUlJBWSIsIkRPVUJMRSIsImRvYiIsIkRBVEVPTkxZIiwibmF0aW9uYWxpdHkiLCJnZW9ncmFwaGljRGF0YUlkIiwiZ2VuZGVyIiwiRU5VTSIsInRpbWVzdGFtcHMiLCJwYXJhbm9pZCIsImFzc29jaWF0ZSIsIm1vZGVscyIsIkN1c3RvbWVyRGF0YVBnTW9kZWwiLCJiZWxvbmdzVG8iLCJJZGVudGlmaWNhdGlvblR5cGVQZ01vZGVsIiwiZm9yZWlnbktleSIsImJlZm9yZUNyZWF0ZSIsImRhdGEiLCJiZWZvcmVVcGRhdGUiLCJiZWZvcmVTYXZlIl0sIm1hcHBpbmdzIjoibTNEQWVZOzJGQWZaLEtBQU1BLENBQUFBLGdCQUFnQiwwQkFBR0MsT0FBTyxDQUFDLDZCQUFELENBQVYsQ0FBdEIsQyx3QkFFQUMsTUFBTSxDQUFDQyxPQUFQLENBQWlCLENBQUNDLFNBQUQsQ0FBWUMsU0FBWixHQUEwQix5QkFDekMsS0FBTUMsQ0FBQUEsWUFBWSwwQkFBR0YsU0FBUyxDQUFDRyxNQUFWLENBQ25CLGNBRG1CLENBRW5CLENBQ0VDLG1CQUFtQixDQUFFLENBQ25CQyxJQUFJLENBQUVKLFNBQVMsQ0FBQ0ssTUFERyxDQUVuQkMsU0FBUyxDQUFFLEtBRlEsQ0FEdkIsQ0FLRUMsb0JBQW9CLENBQUUsQ0FDcEJILElBQUksQ0FBRUosU0FBUyxDQUFDUSxPQURJLENBRXBCRixTQUFTLENBQUUsSUFGUyxDQUx4QixDQVNFRyxvQkFBb0IsQ0FBRSxDQUNwQkwsSUFBSSxDQUFFSixTQUFTLENBQUNLLE1BREksQ0FFcEJDLFNBQVMsQ0FBRSxJQUZTLENBVHhCLENBYUVJLElBQUksQ0FBRSxDQUNKTixJQUFJLENBQUVKLFNBQVMsQ0FBQ0ssTUFEWixDQUVKQyxTQUFTLENBQUUsSUFGUCxDQWJSLENBaUJFSyxRQUFRLENBQUUsQ0FDUlAsSUFBSSxDQUFFSixTQUFTLENBQUNLLE1BRFIsQ0FFUkMsU0FBUyxDQUFFLElBRkgsQ0FqQlosQ0FxQkVNLGNBQWMsQ0FBRSxDQUNkUixJQUFJLENBQUVKLFNBQVMsQ0FBQ0ssTUFERixDQUVkQyxTQUFTLENBQUUsSUFGRyxDQXJCbEIsQ0F5QkVPLEtBQUssQ0FBRSxDQUNMVCxJQUFJLENBQUVKLFNBQVMsQ0FBQ0ssTUFEWCxDQUVMQyxTQUFTLENBQUUsSUFGTixDQXpCVCxDQTZCRVEsS0FBSyxDQUFFLENBQ0xWLElBQUksQ0FBRUosU0FBUyxDQUFDSyxNQURYLENBRUxDLFNBQVMsQ0FBRSxJQUZOLENBN0JULENBaUNFUyxPQUFPLENBQUUsQ0FDUFgsSUFBSSxDQUFFSixTQUFTLENBQUNLLE1BRFQsQ0FFUEMsU0FBUyxDQUFFLElBRkosQ0FqQ1gsQ0FxQ0VVLE9BQU8sQ0FBRSxDQUNQWixJQUFJLENBQUVKLFNBQVMsQ0FBQ2lCLEtBQVYsQ0FBZ0JqQixTQUFTLENBQUNrQixNQUExQixDQURDLENBRVBaLFNBQVMsQ0FBRSxJQUZKLENBckNYLENBeUNFYSxHQUFHLENBQUUsQ0FDSGYsSUFBSSxDQUFFSixTQUFTLENBQUNvQixRQURiLENBRUhkLFNBQVMsQ0FBRSxJQUZSLENBekNQLENBNkNFZSxXQUFXLENBQUUsQ0FDWGpCLElBQUksQ0FBRUosU0FBUyxDQUFDSyxNQURMLENBRVhDLFNBQVMsQ0FBRSxJQUZBLENBN0NmLENBaURFZ0IsZ0JBQWdCLENBQUUsQ0FDaEJsQixJQUFJLENBQUVKLFNBQVMsQ0FBQ0ssTUFEQSxDQUVoQkMsU0FBUyxDQUFFLElBRkssQ0FqRHBCLENBcURFaUIsTUFBTSxDQUFFLENBQ05uQixJQUFJLENBQUVKLFNBQVMsQ0FBQ3dCLElBQVYsQ0FBZSxNQUFmLENBQXVCLFFBQXZCLENBQWlDLE9BQWpDLENBREEsQ0FFTmxCLFNBQVMsQ0FBRSxJQUZMLENBckRWLENBRm1CLENBNERuQixDQUNFbUIsVUFBVSxDQUFFLElBRGQsQ0FFRUMsUUFBUSxDQUFFLElBRlosQ0E1RG1CLENBQUgsQ0FBbEIsQ0FEeUMsd0JBa0V6Q3pCLFlBQVksQ0FBQzBCLFNBQWIsQ0FBMEJDLE1BQUQsRUFBWSxpREFDbkNBLE1BQU0sQ0FBQ0MsbUJBQVAsQ0FBMkJDLFNBQTNCLENBQXFDRixNQUFNLENBQUNHLHlCQUE1QyxDQUF1RSxDQUNyRUMsVUFBVSxDQUFFLHNCQUR5RCxDQUF2RSxFQUdELENBSkQsQ0FsRXlDLHdCQXVFekMvQixZQUFZLENBQUNnQyxZQUFiLENBQTJCQyxJQUFELEVBQVUsQ0FDbEM7QUFEa0Msd0JBRW5DLENBRkQsRUF2RXlDLHdCQTBFekNqQyxZQUFZLENBQUNrQyxZQUFiLENBQTJCRCxJQUFELEVBQVUsQ0FDbEM7QUFEa0Msd0JBRW5DLENBRkQsRUExRXlDLHdCQTZFekNqQyxZQUFZLENBQUNtQyxVQUFiLENBQXlCRixJQUFELEVBQVUsQ0FDaEM7QUFEZ0Msd0JBRWpDLENBRkQsRUE3RXlDLHdCQWdGekMsTUFBT2pDLENBQUFBLFlBQVAsQ0FDRCxDQWpGRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNsZWFyQ0hMSURGb3JtYXQgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2NsZWFyQ0hMSURGb3JtYXQnKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcbiAgY29uc3QgQ3VzdG9tZXJEYXRhID0gc2VxdWVsaXplLmRlZmluZShcclxuICAgICdDdXN0b21lckRhdGEnLFxyXG4gICAge1xyXG4gICAgICBpZGVudGlmaWNhdGlvblZhbHVlOiB7XHJcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcclxuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxyXG4gICAgICB9LFxyXG4gICAgICBpZGVudGlmaWNhdGlvblR5cGVJZDoge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG4gICAgICAgIGFsbG93TnVsbDogdHJ1ZSxcclxuICAgICAgfSxcclxuICAgICAgZG9jdW1lbnRTZXJpYWxOdW1iZXI6IHtcclxuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgICAgIGFsbG93TnVsbDogdHJ1ZSxcclxuICAgICAgfSxcclxuICAgICAgbmFtZToge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICAgICAgYWxsb3dOdWxsOiB0cnVlLFxyXG4gICAgICB9LFxyXG4gICAgICBsYXN0TmFtZToge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICAgICAgYWxsb3dOdWxsOiB0cnVlLFxyXG4gICAgICB9LFxyXG4gICAgICBtb3RoZXJMYXN0TmFtZToge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICAgICAgYWxsb3dOdWxsOiB0cnVlLFxyXG4gICAgICB9LFxyXG4gICAgICBlbWFpbDoge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICAgICAgYWxsb3dOdWxsOiB0cnVlLFxyXG4gICAgICB9LFxyXG4gICAgICBwaG9uZToge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICAgICAgYWxsb3dOdWxsOiB0cnVlLFxyXG4gICAgICB9LFxyXG4gICAgICBhZGRyZXNzOiB7XHJcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcclxuICAgICAgICBhbGxvd051bGw6IHRydWUsXHJcbiAgICAgIH0sXHJcbiAgICAgIGxhdExvbmc6IHtcclxuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuQVJSQVkoRGF0YVR5cGVzLkRPVUJMRSksXHJcbiAgICAgICAgYWxsb3dOdWxsOiB0cnVlLFxyXG4gICAgICB9LFxyXG4gICAgICBkb2I6IHtcclxuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuREFURU9OTFksXHJcbiAgICAgICAgYWxsb3dOdWxsOiB0cnVlLFxyXG4gICAgICB9LFxyXG4gICAgICBuYXRpb25hbGl0eToge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICAgICAgYWxsb3dOdWxsOiB0cnVlLFxyXG4gICAgICB9LFxyXG4gICAgICBnZW9ncmFwaGljRGF0YUlkOiB7XHJcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcclxuICAgICAgICBhbGxvd051bGw6IHRydWUsXHJcbiAgICAgIH0sXHJcbiAgICAgIGdlbmRlcjoge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5FTlVNKCdNQUxFJywgJ0ZFTUFMRScsICdPVEhFUicpLFxyXG4gICAgICAgIGFsbG93TnVsbDogdHJ1ZSxcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIHRpbWVzdGFtcHM6IHRydWUsXHJcbiAgICAgIHBhcmFub2lkOiB0cnVlLFxyXG4gICAgfSxcclxuICApO1xyXG4gIEN1c3RvbWVyRGF0YS5hc3NvY2lhdGUgPSAobW9kZWxzKSA9PiB7XHJcbiAgICBtb2RlbHMuQ3VzdG9tZXJEYXRhUGdNb2RlbC5iZWxvbmdzVG8obW9kZWxzLklkZW50aWZpY2F0aW9uVHlwZVBnTW9kZWwsIHtcclxuICAgICAgZm9yZWlnbktleTogJ2lkZW50aWZpY2F0aW9uVHlwZUlkJyxcclxuICAgIH0pO1xyXG4gIH07XHJcbiAgQ3VzdG9tZXJEYXRhLmJlZm9yZUNyZWF0ZSgoZGF0YSkgPT4ge1xyXG4gICAgLy9kYXRhLmlkZW50aWZpY2F0aW9uVmFsdWUgPSBjbGVhckNITElERm9ybWF0KGRhdGEuaWRlbnRpZmljYXRpb25WYWx1ZSk7XHJcbiAgfSk7XHJcbiAgQ3VzdG9tZXJEYXRhLmJlZm9yZVVwZGF0ZSgoZGF0YSkgPT4ge1xyXG4gICAgLy9kYXRhLmlkZW50aWZpY2F0aW9uVmFsdWUgPSBjbGVhckNITElERm9ybWF0KGRhdGEuaWRlbnRpZmljYXRpb25WYWx1ZSk7XHJcbiAgfSk7XHJcbiAgQ3VzdG9tZXJEYXRhLmJlZm9yZVNhdmUoKGRhdGEpID0+IHtcclxuICAgIC8vZGF0YS5pZGVudGlmaWNhdGlvblZhbHVlID0gY2xlYXJDSExJREZvcm1hdChkYXRhLmlkZW50aWZpY2F0aW9uVmFsdWUpO1xyXG4gIH0pO1xyXG4gIHJldHVybiBDdXN0b21lckRhdGE7XHJcbn07Il19