function cov_1jm6ug2xe(){var path="/vagrant/continuum/core/src/common/models/SalesChannelType.js";var hash="beac69e0aa3e1f998ce9ccd655b69c335b536192";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/vagrant/continuum/core/src/common/models/SalesChannelType.js",statementMap:{"0":{start:{line:1,column:18},end:{line:1,column:38}},"1":{start:{line:3,column:0},end:{line:26,column:2}},"2":{start:{line:14,column:2},end:{line:24,column:4}},"3":{start:{line:25,column:2},end:{line:25,column:26}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:3,column:17},end:{line:3,column:18}},loc:{start:{line:3,column:43},end:{line:26,column:1}},line:3},"1":{name:"(anonymous_1)",decl:{start:{line:10,column:4},end:{line:10,column:5}},loc:{start:{line:10,column:29},end:{line:12,column:5}},line:10}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0,"1":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"beac69e0aa3e1f998ce9ccd655b69c335b536192"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1jm6ug2xe=function(){return actualCoverage;};}return actualCoverage;}cov_1jm6ug2xe();const{Model}=(cov_1jm6ug2xe().s[0]++,require('sequelize'));cov_1jm6ug2xe().s[1]++;module.exports=(sequelize,DataTypes)=>{cov_1jm6ug2xe().f[0]++;class SalesChannelType extends Model{/**
     * Helper method for defining associations.
     * This method is not a part of Sequelize lifecycle.
     * The `models/index` file will call this method automatically.
     */static associate(models){// define association here
cov_1jm6ug2xe().f[1]++;}}cov_1jm6ug2xe().s[2]++;SalesChannelType.init({description:DataTypes.STRING},{sequelize,modelName:'SalesChannelType',timestamps:true,paranoid:true});cov_1jm6ug2xe().s[3]++;return SalesChannelType;};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNhbGVzQ2hhbm5lbFR5cGUuanMiXSwibmFtZXMiOlsiTW9kZWwiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIlNhbGVzQ2hhbm5lbFR5cGUiLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJpbml0IiwiZGVzY3JpcHRpb24iLCJTVFJJTkciLCJtb2RlbE5hbWUiLCJ0aW1lc3RhbXBzIiwicGFyYW5vaWQiXSwibWFwcGluZ3MiOiJpb0NBZVk7eUZBZlosS0FBTSxDQUFFQSxLQUFGLDBCQUFZQyxPQUFPLENBQUMsV0FBRCxDQUFuQixDQUFOLEMsdUJBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQixDQUFDQyxTQUFELENBQVlDLFNBQVosR0FBMEIsd0JBQ3pDLEtBQU1DLENBQUFBLGdCQUFOLFFBQStCTixDQUFBQSxLQUFNLENBQ25DO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsT0FDSSxNQUFPTyxDQUFBQSxTQUFQLENBQWlCQyxNQUFqQixDQUF5QixDQUN2QjtBQUR1Qix1QkFFeEIsQ0FSa0MsQ0FESSx1QkFXekNGLGdCQUFnQixDQUFDRyxJQUFqQixDQUNFLENBQ0VDLFdBQVcsQ0FBRUwsU0FBUyxDQUFDTSxNQUR6QixDQURGLENBSUUsQ0FDRVAsU0FERixDQUVFUSxTQUFTLENBQUUsa0JBRmIsQ0FHRUMsVUFBVSxDQUFFLElBSGQsQ0FJRUMsUUFBUSxDQUFFLElBSlosQ0FKRixFQVh5Qyx1QkFzQnpDLE1BQU9SLENBQUFBLGdCQUFQLENBQ0QsQ0F2QkQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IE1vZGVsIH0gPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcbiAgY2xhc3MgU2FsZXNDaGFubmVsVHlwZSBleHRlbmRzIE1vZGVsIHtcclxuICAgIC8qKlxyXG4gICAgICogSGVscGVyIG1ldGhvZCBmb3IgZGVmaW5pbmcgYXNzb2NpYXRpb25zLlxyXG4gICAgICogVGhpcyBtZXRob2QgaXMgbm90IGEgcGFydCBvZiBTZXF1ZWxpemUgbGlmZWN5Y2xlLlxyXG4gICAgICogVGhlIGBtb2RlbHMvaW5kZXhgIGZpbGUgd2lsbCBjYWxsIHRoaXMgbWV0aG9kIGF1dG9tYXRpY2FsbHkuXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBhc3NvY2lhdGUobW9kZWxzKSB7XHJcbiAgICAgIC8vIGRlZmluZSBhc3NvY2lhdGlvbiBoZXJlXHJcbiAgICB9XHJcbiAgfVxyXG4gIFNhbGVzQ2hhbm5lbFR5cGUuaW5pdChcclxuICAgIHtcclxuICAgICAgZGVzY3JpcHRpb246IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBzZXF1ZWxpemUsXHJcbiAgICAgIG1vZGVsTmFtZTogJ1NhbGVzQ2hhbm5lbFR5cGUnLFxyXG4gICAgICB0aW1lc3RhbXBzOiB0cnVlLFxyXG4gICAgICBwYXJhbm9pZDogdHJ1ZSxcclxuICAgIH0sXHJcbiAgKTtcclxuICByZXR1cm4gU2FsZXNDaGFubmVsVHlwZTtcclxufTtcclxuIl19