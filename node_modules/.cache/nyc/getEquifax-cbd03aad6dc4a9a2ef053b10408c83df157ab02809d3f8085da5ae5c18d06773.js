function cov_1seu9sz7eq(){var path="/vagrant/continuum/core/src/modules/evaluation/middlewares/chl/v2/equifax/getEquifax.js";var hash="b4cac033fed83b11e6e27b8f2141379aaf53f321";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/vagrant/continuum/core/src/modules/evaluation/middlewares/chl/v2/equifax/getEquifax.js",statementMap:{"0":{start:{line:1,column:38},end:{line:1,column:123}},"1":{start:{line:2,column:31},end:{line:2,column:109}},"2":{start:{line:3,column:18},end:{line:3,column:38}},"3":{start:{line:4,column:15},end:{line:4,column:32}},"4":{start:{line:6,column:19},end:{line:57,column:1}},"5":{start:{line:7,column:54},end:{line:7,column:79}},"6":{start:{line:8,column:24},end:{line:10,column:6}},"7":{start:{line:11,column:4},end:{line:11,column:111}},"8":{start:{line:11,column:22},end:{line:11,column:111}},"9":{start:{line:12,column:42},end:{line:12,column:61}},"10":{start:{line:14,column:54},end:{line:14,column:58}},"11":{start:{line:15,column:28},end:{line:24,column:8}},"12":{start:{line:29,column:4},end:{line:54,column:5}},"13":{start:{line:30,column:8},end:{line:30,column:47}},"14":{start:{line:31,column:8},end:{line:31,column:107}},"15":{start:{line:32,column:8},end:{line:32,column:22}},"16":{start:{line:34,column:8},end:{line:34,column:23}},"17":{start:{line:35,column:8},end:{line:35,column:57}},"18":{start:{line:37,column:37},end:{line:37,column:93}},"19":{start:{line:39,column:8},end:{line:53,column:9}},"20":{start:{line:40,column:46},end:{line:46,column:14}},"21":{start:{line:48,column:12},end:{line:50,column:13}},"22":{start:{line:49,column:16},end:{line:49,column:59}},"23":{start:{line:52,column:12},end:{line:52,column:68}},"24":{start:{line:55,column:28},end:{line:55,column:63}},"25":{start:{line:56,column:4},end:{line:56,column:54}},"26":{start:{line:58,column:23},end:{line:60,column:1}},"27":{start:{line:58,column:48},end:{line:60,column:1}},"28":{start:{line:59,column:4},end:{line:59,column:55}},"29":{start:{line:61,column:0},end:{line:64,column:1}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:19},end:{line:6,column:20}},loc:{start:{line:6,column:48},end:{line:57,column:1}},line:6},"1":{name:"(anonymous_1)",decl:{start:{line:58,column:23},end:{line:58,column:24}},loc:{start:{line:58,column:48},end:{line:60,column:1}},line:58},"2":{name:"(anonymous_2)",decl:{start:{line:58,column:48},end:{line:58,column:49}},loc:{start:{line:58,column:74},end:{line:60,column:1}},line:58}},branchMap:{"0":{loc:{start:{line:11,column:4},end:{line:11,column:111}},type:"if",locations:[{start:{line:11,column:4},end:{line:11,column:111}},{start:{line:11,column:4},end:{line:11,column:111}}],line:11},"1":{loc:{start:{line:29,column:4},end:{line:54,column:5}},type:"if",locations:[{start:{line:29,column:4},end:{line:54,column:5}},{start:{line:29,column:4},end:{line:54,column:5}}],line:29},"2":{loc:{start:{line:48,column:12},end:{line:50,column:13}},type:"if",locations:[{start:{line:48,column:12},end:{line:50,column:13}},{start:{line:48,column:12},end:{line:50,column:13}}],line:48}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b4cac033fed83b11e6e27b8f2141379aaf53f321"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1seu9sz7eq=function(){return actualCoverage;};}return actualCoverage;}cov_1seu9sz7eq();const{getResponseFromEquifaxApi}=(cov_1seu9sz7eq().s[0]++,require('modules/evaluation/middlewares/chl/v2/equifax/fn/getResponseFromEquifaxApi'));const{getDataFromEquifax}=(cov_1seu9sz7eq().s[1]++,require('modules/evaluation/middlewares/chl/v2/equifax/fn/getDataFromEquifax'));const Sequelize=(cov_1seu9sz7eq().s[2]++,require('sequelize'));const moment=(cov_1seu9sz7eq().s[3]++,require('moment'));cov_1seu9sz7eq().s[4]++;const getEquifax=async(dependencies,body)=>{cov_1seu9sz7eq().f[0]++;const{EquifaxApiPgModel,CoreSettingPgModel}=(cov_1seu9sz7eq().s[5]++,dependencies.commonModels);const coreSetting=(cov_1seu9sz7eq().s[6]++,await CoreSettingPgModel.findOne({where:{type:'EQUIFAX_EVALUATION_CACHE_DAYS_AMOUNT_CHILE'}}));cov_1seu9sz7eq().s[7]++;if(!coreSetting){cov_1seu9sz7eq().b[0][0]++;cov_1seu9sz7eq().s[8]++;throw new Error('Core setting for EQUIFAX_EVALUATION_CACHE_DAYS_AMOUNT_CHILE not found');}else{cov_1seu9sz7eq().b[0][1]++;}const{previousEvaluationDaysAgo}=(cov_1seu9sz7eq().s[9]++,coreSetting.setting);const{identifierValue,identifierType,income}=(cov_1seu9sz7eq().s[10]++,body);const equifaxApiCache=(cov_1seu9sz7eq().s[11]++,await EquifaxApiPgModel.findOne({where:{identifierValue,identifierType,equifaxResponseCachedAt:{[Sequelize.Op.gte]:moment().subtract(previousEvaluationDaysAgo,'days').toDate()}}}));let response;let cached;let expiresOn;cov_1seu9sz7eq().s[12]++;if(equifaxApiCache){cov_1seu9sz7eq().b[1][0]++;cov_1seu9sz7eq().s[13]++;response=equifaxApiCache.rawResponse;cov_1seu9sz7eq().s[14]++;expiresOn=moment(equifaxApiCache.equifaxResponseCachedAt).add(previousEvaluationDaysAgo,'days');cov_1seu9sz7eq().s[15]++;cached=true;}else{cov_1seu9sz7eq().b[1][1]++;cov_1seu9sz7eq().s[16]++;cached=false;cov_1seu9sz7eq().s[17]++;response=await getResponseFromEquifaxApi(body);const preparedEquifaxData=(cov_1seu9sz7eq().s[18]++,{identifierType,identifierValue,rawResponse:response});cov_1seu9sz7eq().s[19]++;try{const[EquifaxApiData,created]=(cov_1seu9sz7eq().s[20]++,await EquifaxApiPgModel.findOrCreate({where:{identifierType,identifierValue},defaults:preparedEquifaxData}));cov_1seu9sz7eq().s[21]++;if(!created){cov_1seu9sz7eq().b[2][0]++;cov_1seu9sz7eq().s[22]++;EquifaxApiData.update(preparedEquifaxData);}else{cov_1seu9sz7eq().b[2][1]++;}}catch(err){cov_1seu9sz7eq().s[23]++;throw new Error(`persistEquifaxData (${err.message}) `);}}const dataFromEquifax=(cov_1seu9sz7eq().s[24]++,await getDataFromEquifax(response));cov_1seu9sz7eq().s[25]++;return{cached,expiresOn,result:dataFromEquifax};};cov_1seu9sz7eq().s[26]++;const getHttpEquifax=(dependencies,stage)=>{cov_1seu9sz7eq().f[1]++;cov_1seu9sz7eq().s[27]++;return async(req,res,next)=>{cov_1seu9sz7eq().f[2]++;cov_1seu9sz7eq().s[28]++;res.json(await getEquifax(dependencies,req.body));};};cov_1seu9sz7eq().s[29]++;module.exports={getEquifax,getHttpEquifax};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldEVxdWlmYXguanMiXSwibmFtZXMiOlsiZ2V0UmVzcG9uc2VGcm9tRXF1aWZheEFwaSIsInJlcXVpcmUiLCJnZXREYXRhRnJvbUVxdWlmYXgiLCJTZXF1ZWxpemUiLCJtb21lbnQiLCJnZXRFcXVpZmF4IiwiZGVwZW5kZW5jaWVzIiwiYm9keSIsIkVxdWlmYXhBcGlQZ01vZGVsIiwiQ29yZVNldHRpbmdQZ01vZGVsIiwiY29tbW9uTW9kZWxzIiwiY29yZVNldHRpbmciLCJmaW5kT25lIiwid2hlcmUiLCJ0eXBlIiwiRXJyb3IiLCJwcmV2aW91c0V2YWx1YXRpb25EYXlzQWdvIiwic2V0dGluZyIsImlkZW50aWZpZXJWYWx1ZSIsImlkZW50aWZpZXJUeXBlIiwiaW5jb21lIiwiZXF1aWZheEFwaUNhY2hlIiwiZXF1aWZheFJlc3BvbnNlQ2FjaGVkQXQiLCJPcCIsImd0ZSIsInN1YnRyYWN0IiwidG9EYXRlIiwicmVzcG9uc2UiLCJjYWNoZWQiLCJleHBpcmVzT24iLCJyYXdSZXNwb25zZSIsImFkZCIsInByZXBhcmVkRXF1aWZheERhdGEiLCJFcXVpZmF4QXBpRGF0YSIsImNyZWF0ZWQiLCJmaW5kT3JDcmVhdGUiLCJkZWZhdWx0cyIsInVwZGF0ZSIsImVyciIsIm1lc3NhZ2UiLCJkYXRhRnJvbUVxdWlmYXgiLCJyZXN1bHQiLCJnZXRIdHRwRXF1aWZheCIsInN0YWdlIiwicmVxIiwicmVzIiwibmV4dCIsImpzb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoicWhIQWVZOzJGQWZaLEtBQU0sQ0FBRUEseUJBQUYsMkJBQWdDQyxPQUFPLENBQUMsNEVBQUQsQ0FBdkMsQ0FBTixDQUNBLEtBQU0sQ0FBRUMsa0JBQUYsMkJBQXlCRCxPQUFPLENBQUMscUVBQUQsQ0FBaEMsQ0FBTixDQUNBLEtBQU1FLENBQUFBLFNBQVMsMEJBQUdGLE9BQU8sQ0FBQyxXQUFELENBQVYsQ0FBZixDQUNBLEtBQU1HLENBQUFBLE1BQU0sMEJBQUdILE9BQU8sQ0FB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LENBQWlCQyxJQUFqQixHQUEwQixrREFDdEVELEdBQUcsQ0FBQ0UsSUFBSixDQUFTLEtBQU0xQyxDQUFBQSxVQUFVLENBQUNDLFlBQUQsQ0FBZXNDLEdBQUcsQ0FBQ3JDLElBQW5CLENBQXpCLEVBQ0gsQ0FGK0MsQ0FFL0MsQ0FGRCxDLHlCQUdBeUMsTUFBTSxDQUFDQyxPQUFQLENBQWlCLENBQ2I1QyxVQURhLENBRWJxQyxjQUZhLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBnZXRSZXNwb25zZUZyb21FcXVpZmF4QXBpIH0gPSByZXF1aXJlKCdtb2R1bGVzL2V2YWx1YXRpb24vbWlkZGxld2FyZXMvY2hsL3YyL2VxdWlmYXgvZm4vZ2V0UmVzcG9uc2VGcm9tRXF1aWZheEFwaScpO1xyXG5jb25zdCB7IGdldERhdGFGcm9tRXF1aWZheCB9ID0gcmVxdWlyZSgnbW9kdWxlcy9ldmFsdWF0aW9uL21pZGRsZXdhcmVzL2NobC92Mi9lcXVpZmF4L2ZuL2dldERhdGFGcm9tRXF1aWZheCcpO1xyXG5jb25zdCBTZXF1ZWxpemUgPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcclxuY29uc3QgbW9tZW50ID0gcmVxdWlyZSgnbW9tZW50Jyk7XHJcblxyXG5jb25zdCBnZXRFcXVpZmF4ID0gYXN5bmMoZGVwZW5kZW5jaWVzLCBib2R5KSA9PiB7XHJcbiAgICBjb25zdCB7IEVxdWlmYXhBcGlQZ01vZGVsLCBDb3JlU2V0dGluZ1BnTW9kZWwgfSA9IGRlcGVuZGVuY2llcy5jb21tb25Nb2RlbHM7XHJcbiAgICBjb25zdCBjb3JlU2V0dGluZyA9IGF3YWl0IENvcmVTZXR0aW5nUGdNb2RlbC5maW5kT25lKHtcclxuICAgICAgICB3aGVyZTogeyB0eXBlOiAnRVFVSUZBWF9FVkFMVUFUSU9OX0NBQ0hFX0RBWVNfQU1PVU5UX0NISUxFJyB9LFxyXG4gICAgfSk7XHJcbiAgICBpZiAoIWNvcmVTZXR0aW5nKSB0aHJvdyBuZXcgRXJyb3IoJ0NvcmUgc2V0dGluZyBmb3IgRVFVSUZBWF9FVkFMVUFUSU9OX0NBQ0hFX0RBWVNfQU1PVU5UX0NISUxFIG5vdCBmb3VuZCcpO1xyXG4gICAgY29uc3QgeyBwcmV2aW91c0V2YWx1YXRpb25EYXlzQWdvIH0gPSBjb3JlU2V0dGluZy5zZXR0aW5nO1xyXG5cclxuICAgIGNvbnN0IHtpZGVudGlmaWVyVmFsdWUsIGlkZW50aWZpZXJUeXBlLCBpbmNvbWV9ID0gYm9keTtcclxuICAgIGNvbnN0IGVxdWlmYXhBcGlDYWNoZSA9IGF3YWl0IEVxdWlmYXhBcGlQZ01vZGVsLmZpbmRPbmUoe1xyXG4gICAgICAgIHdoZXJlOiB7XHJcbiAgICAgICAgICBpZGVudGlmaWVyVmFsdWUsaWRlbnRpZmllclR5cGUsXHJcbiAgICAgICAgICBlcXVpZmF4UmVzcG9uc2VDYWNoZWRBdDoge1xyXG4gICAgICAgICAgICBbU2VxdWVsaXplLk9wLmd0ZV06IG1vbWVudCgpXHJcbiAgICAgICAgICAgICAgLnN1YnRyYWN0KHByZXZpb3VzRXZhbHVhdGlvbkRheXNBZ28sICdkYXlzJylcclxuICAgICAgICAgICAgICAudG9EYXRlKCksXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH0sXHJcbiAgICAgIH0pO1xyXG4gICAgbGV0IHJlc3BvbnNlO1xyXG4gICAgbGV0IGNhY2hlZDtcclxuICAgIGxldCBleHBpcmVzT247XHJcblxyXG4gICAgaWYgKGVxdWlmYXhBcGlDYWNoZSl7XHJcbiAgICAgICAgcmVzcG9uc2UgPSBlcXVpZmF4QXBpQ2FjaGUucmF3UmVzcG9uc2U7XHJcbiAgICAgICAgZXhwaXJlc09uID0gbW9tZW50KGVxdWlmYXhBcGlDYWNoZS5lcXVpZmF4UmVzcG9uc2VDYWNoZWRBdCkuYWRkKHByZXZpb3VzRXZhbHVhdGlvbkRheXNBZ28sICdkYXlzJyk7XHJcbiAgICAgICAgY2FjaGVkID0gdHJ1ZTtcclxuICAgIH1lbHNle1xyXG4gICAgICAgIGNhY2hlZCA9IGZhbHNlO1xyXG4gICAgICAgIHJlc3BvbnNlID0gYXdhaXQgZ2V0UmVzcG9uc2VGcm9tRXF1aWZheEFwaShib2R5KTtcclxuICAgICAgICAgXHJcbiAgICAgICAgY29uc3QgcHJlcGFyZWRFcXVpZmF4RGF0YSA9ICB7aWRlbnRpZmllclR5cGUsIGlkZW50aWZpZXJWYWx1ZSwgcmF3UmVzcG9uc2U6IHJlc3BvbnNlfTtcclxuXHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgW0VxdWlmYXhBcGlEYXRhLCBjcmVhdGVkXSA9IGF3YWl0IEVxdWlmYXhBcGlQZ01vZGVsLmZpbmRPckNyZWF0ZSh7XHJcbiAgICAgICAgICAgIHdoZXJlOiB7XHJcbiAgICAgICAgICAgICAgICBpZGVudGlmaWVyVHlwZSxcclxuICAgICAgICAgICAgICAgIGlkZW50aWZpZXJWYWx1ZSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZGVmYXVsdHM6IHByZXBhcmVkRXF1aWZheERhdGFcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgIGlmICghY3JlYXRlZCkge1xyXG4gICAgICAgICAgICAgICAgRXF1aWZheEFwaURhdGEudXBkYXRlKHByZXBhcmVkRXF1aWZheERhdGEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgcGVyc2lzdEVxdWlmYXhEYXRhICgke2Vyci5tZXNzYWdlfSkgYCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgY29uc3QgZGF0YUZyb21FcXVpZmF4ID0gYXdhaXQgZ2V0RGF0YUZyb21FcXVpZmF4KCByZXNwb25zZSk7XHJcbiAgICByZXR1cm4ge2NhY2hlZCxleHBpcmVzT24sIHJlc3VsdDpkYXRhRnJvbUVxdWlmYXh9O1xyXG59XHJcbmNvbnN0IGdldEh0dHBFcXVpZmF4ID0gKGRlcGVuZGVuY2llcywgc3RhZ2UpID0+IGFzeW5jIChyZXEsIHJlcywgbmV4dCkgPT4ge1xyXG4gICAgcmVzLmpzb24oYXdhaXQgZ2V0RXF1aWZheChkZXBlbmRlbmNpZXMsIHJlcS5ib2R5KSk7XHJcbn1cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBnZXRFcXVpZmF4LFxyXG4gICAgZ2V0SHR0cEVxdWlmYXhcclxufSJdfQ==