function cov_1cgac762df(){var path="/vagrant/continuum/core/src/common/models/Rates.js";var hash="2869f2f72bfe52e16296eb496f90d1242ef4bcb4";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/vagrant/continuum/core/src/common/models/Rates.js",statementMap:{"0":{start:{line:1,column:18},end:{line:1,column:38}},"1":{start:{line:3,column:0},end:{line:99,column:2}},"2":{start:{line:11,column:6},end:{line:13,column:9}},"3":{start:{line:14,column:6},end:{line:16,column:9}},"4":{start:{line:17,column:6},end:{line:19,column:9}},"5":{start:{line:20,column:6},end:{line:22,column:9}},"6":{start:{line:23,column:6},end:{line:25,column:9}},"7":{start:{line:28,column:2},end:{line:97,column:4}},"8":{start:{line:98,column:2},end:{line:98,column:15}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:3,column:17},end:{line:3,column:18}},loc:{start:{line:3,column:43},end:{line:99,column:1}},line:3},"1":{name:"(anonymous_1)",decl:{start:{line:10,column:4},end:{line:10,column:5}},loc:{start:{line:10,column:29},end:{line:26,column:5}},line:10}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},f:{"0":0,"1":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"2869f2f72bfe52e16296eb496f90d1242ef4bcb4"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1cgac762df=function(){return actualCoverage;};}return actualCoverage;}cov_1cgac762df();const{Model}=(cov_1cgac762df().s[0]++,require('sequelize'));cov_1cgac762df().s[1]++;module.exports=(sequelize,DataTypes)=>{cov_1cgac762df().f[0]++;class Rates extends Model{/**
     * Helper method for defining associations.
     * This method is not a part of Sequelize lifecycle.
     * The `models/index` file will call this method automatically.
     */static associate(models){cov_1cgac762df().f[1]++;cov_1cgac762df().s[2]++;models.RatesPgModel.belongsTo(models.FinancingEntitiesPgModel,{foreignKey:'financingEntityId'});cov_1cgac762df().s[3]++;models.RatesPgModel.belongsTo(models.RateTypePgModel,{foreignKey:'rateTypeId'});cov_1cgac762df().s[4]++;models.RatesPgModel.belongsTo(models.VehicleTypePgModel,{foreignKey:'vehicleTypeId'});cov_1cgac762df().s[5]++;models.RatesPgModel.belongsTo(models.LoanTypePgModel,{foreignKey:'loanTypeId'});cov_1cgac762df().s[6]++;models.RatesPgModel.belongsTo(models.SalesChannelPgModel,{foreignKey:'salesChannelId'});}}cov_1cgac762df().s[7]++;Rates.init({financingEntityId:{type:DataTypes.INTEGER,allowNull:false},rateTypeId:{type:DataTypes.INTEGER,allowNull:false},vehicleTypeId:{type:DataTypes.INTEGER,allowNull:false},loanTypeId:{type:DataTypes.INTEGER,allowNull:false},salesChannelId:{type:DataTypes.INTEGER,allowNull:false},customerRate:{type:DataTypes.DOUBLE,allowNull:false},baseRate:{type:DataTypes.DOUBLE,allowNull:false},dealerRate:{type:DataTypes.DOUBLE,allowNull:false},termsFrom:{type:DataTypes.INTEGER,allowNull:false},termsTo:{type:DataTypes.INTEGER,allowNull:false},amountFinancedFrom:{type:DataTypes.DOUBLE,allowNull:false},amountFinancedTo:{type:DataTypes.DOUBLE,allowNull:false},fee:{type:DataTypes.DOUBLE,allowNull:false},highlight:{type:DataTypes.DOUBLE,allowNull:false},immediateOption:{type:DataTypes.BOOLEAN,allowNull:false}},{sequelize,modelName:'Rates',timestamps:true,paranoid:true});cov_1cgac762df().s[8]++;return Rates;};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJhdGVzLmpzIl0sIm5hbWVzIjpbIk1vZGVsIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJSYXRlcyIsImFzc29jaWF0ZSIsIm1vZGVscyIsIlJhdGVzUGdNb2RlbCIsImJlbG9uZ3NUbyIsIkZpbmFuY2luZ0VudGl0aWVzUGdNb2RlbCIsImZvcmVpZ25LZXkiLCJSYXRlVHlwZVBnTW9kZWwiLCJWZWhpY2xlVHlwZVBnTW9kZWwiLCJMb2FuVHlwZVBnTW9kZWwiLCJTYWxlc0NoYW5uZWxQZ01vZGVsIiwiaW5pdCIsImZpbmFuY2luZ0VudGl0eUlkIiwidHlwZSIsIklOVEVHRVIiLCJhbGxvd051bGwiLCJyYXRlVHlwZUlkIiwidmVoaWNsZVR5cGVJZCIsImxvYW5UeXBlSWQiLCJzYWxlc0NoYW5uZWxJZCIsImN1c3RvbWVyUmF0ZSIsIkRPVUJMRSIsImJhc2VSYXRlIiwiZGVhbGVyUmF0ZSIsInRlcm1zRnJvbSIsInRlcm1zVG8iLCJhbW91bnRGaW5hbmNlZEZyb20iLCJhbW91bnRGaW5hbmNlZFRvIiwiZmVlIiwiaGlnaGxpZ2h0IiwiaW1tZWRpYXRlT3B0aW9uIiwiQk9PTEVBTiIsIm1vZGVsTmFtZSIsInRpbWVzdGFtcHMiLCJwYXJhbm9pZCJdLCJtYXBwaW5ncyI6Inc1Q0FlWTsyRkFmWixLQUFNLENBQUVBLEtBQUYsMkJBQVlDLE9BQU8sQ0FBQyxXQUFELENBQW5CLENBQU4sQyx3QkFFQUMsTUFBTSxDQUFDQyxPQUFQLENBQWlCLENBQUNDLFNBQUQsQ0FBWUMsU0FBWixHQUEwQix5QkFDekMsS0FBTUMsQ0FBQUEsS0FBTixRQUFvQk4sQ0FBQUEsS0FBTSxDQUN4QjtBQUNKO0FBQ0E7QUFDQTtBQUNBLE9BQ0ksTUFBT08sQ0FBQUEsU0FBUCxDQUFpQkMsTUFBakIsQ0FBeUIsaURBQ3ZCQSxNQUFNLENBQUNDLFlBQVAsQ0FBb0JDLFNBQXBCLENBQThCRixNQUFNLENBQUNHLHdCQUFyQyxDQUErRCxD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Iiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBNb2RlbCB9ID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xyXG4gIGNsYXNzIFJhdGVzIGV4dGVuZHMgTW9kZWwge1xyXG4gICAgLyoqXHJcbiAgICAgKiBIZWxwZXIgbWV0aG9kIGZvciBkZWZpbmluZyBhc3NvY2lhdGlvbnMuXHJcbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBub3QgYSBwYXJ0IG9mIFNlcXVlbGl6ZSBsaWZlY3ljbGUuXHJcbiAgICAgKiBUaGUgYG1vZGVscy9pbmRleGAgZmlsZSB3aWxsIGNhbGwgdGhpcyBtZXRob2QgYXV0b21hdGljYWxseS5cclxuICAgICAqL1xyXG4gICAgc3RhdGljIGFzc29jaWF0ZShtb2RlbHMpIHtcclxuICAgICAgbW9kZWxzLlJhdGVzUGdNb2RlbC5iZWxvbmdzVG8obW9kZWxzLkZpbmFuY2luZ0VudGl0aWVzUGdNb2RlbCwge1xyXG4gICAgICAgIGZvcmVpZ25LZXk6ICdmaW5hbmNpbmdFbnRpdHlJZCcsXHJcbiAgICAgIH0pO1xyXG4gICAgICBtb2RlbHMuUmF0ZXNQZ01vZGVsLmJlbG9uZ3NUbyhtb2RlbHMuUmF0ZVR5cGVQZ01vZGVsLCB7XHJcbiAgICAgICAgZm9yZWlnbktleTogJ3JhdGVUeXBlSWQnLFxyXG4gICAgICB9KTtcclxuICAgICAgbW9kZWxzLlJhdGVzUGdNb2RlbC5iZWxvbmdzVG8obW9kZWxzLlZlaGljbGVUeXBlUGdNb2RlbCwge1xyXG4gICAgICAgIGZvcmVpZ25LZXk6ICd2ZWhpY2xlVHlwZUlkJyxcclxuICAgICAgfSk7XHJcbiAgICAgIG1vZGVscy5SYXRlc1BnTW9kZWwuYmVsb25nc1RvKG1vZGVscy5Mb2FuVHlwZVBnTW9kZWwsIHtcclxuICAgICAgICBmb3JlaWduS2V5OiAnbG9hblR5cGVJZCcsXHJcbiAgICAgIH0pO1xyXG4gICAgICBtb2RlbHMuUmF0ZXNQZ01vZGVsLmJlbG9uZ3NUbyhtb2RlbHMuU2FsZXNDaGFubmVsUGdNb2RlbCwge1xyXG4gICAgICAgIGZvcmVpZ25LZXk6ICdzYWxlc0NoYW5uZWxJZCcsXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuICBSYXRlcy5pbml0KFxyXG4gICAge1xyXG4gICAgICBmaW5hbmNpbmdFbnRpdHlJZDoge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXHJcbiAgICAgIH0sXHJcbiAgICAgIHJhdGVUeXBlSWQ6IHtcclxuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuSU5URUdFUixcclxuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxyXG4gICAgICB9LFxyXG4gICAgICB2ZWhpY2xlVHlwZUlkOiB7XHJcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXHJcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcclxuICAgICAgfSxcclxuICAgICAgbG9hblR5cGVJZDoge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXHJcbiAgICAgIH0sXHJcbiAgICAgIHNhbGVzQ2hhbm5lbElkOiB7XHJcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXHJcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcclxuICAgICAgfSxcclxuICAgICAgY3VzdG9tZXJSYXRlOiB7XHJcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLkRPVUJMRSxcclxuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxyXG4gICAgICB9LFxyXG4gICAgICBiYXNlUmF0ZToge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5ET1VCTEUsXHJcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcclxuICAgICAgfSxcclxuICAgICAgZGVhbGVyUmF0ZToge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5ET1VCTEUsXHJcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcclxuICAgICAgfSxcclxuICAgICAgdGVybXNGcm9tOiB7XHJcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXHJcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcclxuICAgICAgfSxcclxuICAgICAgdGVybXNUbzoge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXHJcbiAgICAgIH0sXHJcbiAgICAgIGFtb3VudEZpbmFuY2VkRnJvbToge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5ET1VCTEUsXHJcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcclxuICAgICAgfSxcclxuICAgICAgYW1vdW50RmluYW5jZWRUbzoge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5ET1VCTEUsXHJcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcclxuICAgICAgfSxcclxuICAgICAgZmVlOiB7XHJcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLkRPVUJMRSxcclxuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxyXG4gICAgICB9LFxyXG4gICAgICBoaWdobGlnaHQ6IHtcclxuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuRE9VQkxFLFxyXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXHJcbiAgICAgIH0sXHJcbiAgICAgIGltbWVkaWF0ZU9wdGlvbjoge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5CT09MRUFOLFxyXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBzZXF1ZWxpemUsXHJcbiAgICAgIG1vZGVsTmFtZTogJ1JhdGVzJyxcclxuICAgICAgdGltZXN0YW1wczogdHJ1ZSxcclxuICAgICAgcGFyYW5vaWQ6IHRydWUsXHJcbiAgICB9LFxyXG4gICk7XHJcbiAgcmV0dXJuIFJhdGVzO1xyXG59O1xyXG4iXX0=