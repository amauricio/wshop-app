function cov_1i7g2ec0im(){var path="/vagrant/continuum/core/src/common/models/SalesChannel.js";var hash="aca2c256b370163c7eb1ac55cc527cd110ae1c0e";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/vagrant/continuum/core/src/common/models/SalesChannel.js",statementMap:{"0":{start:{line:1,column:18},end:{line:1,column:38}},"1":{start:{line:3,column:0},end:{line:45,column:2}},"2":{start:{line:14,column:2},end:{line:43,column:4}},"3":{start:{line:44,column:2},end:{line:44,column:22}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:3,column:17},end:{line:3,column:18}},loc:{start:{line:3,column:43},end:{line:45,column:1}},line:3},"1":{name:"(anonymous_1)",decl:{start:{line:10,column:4},end:{line:10,column:5}},loc:{start:{line:10,column:29},end:{line:12,column:5}},line:10}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0,"1":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"aca2c256b370163c7eb1ac55cc527cd110ae1c0e"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1i7g2ec0im=function(){return actualCoverage;};}return actualCoverage;}cov_1i7g2ec0im();const{Model}=(cov_1i7g2ec0im().s[0]++,require('sequelize'));cov_1i7g2ec0im().s[1]++;module.exports=(sequelize,DataTypes)=>{cov_1i7g2ec0im().f[0]++;class SalesChannel extends Model{/**
     * Helper method for defining associations.
     * This method is not a part of Sequelize lifecycle.
     * The `models/index` file will call this method automatically.
     */static associate(models){// define association here
cov_1i7g2ec0im().f[1]++;}}cov_1i7g2ec0im().s[2]++;SalesChannel.init({identificationTypeId:{type:DataTypes.INTEGER,allowNull:false},salesChannelTypeId:{type:DataTypes.INTEGER,allowNull:false},identificationValue:{type:DataTypes.STRING,allowNull:false},description:{type:DataTypes.STRING,allowNull:true},apiKey:{type:DataTypes.STRING,allowNull:false}},{sequelize,modelName:'SalesChannel',timestamps:true,paranoid:true});cov_1i7g2ec0im().s[3]++;return SalesChannel;};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNhbGVzQ2hhbm5lbC5qcyJdLCJuYW1lcyI6WyJNb2RlbCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiU2FsZXNDaGFubmVsIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaW5pdCIsImlkZW50aWZpY2F0aW9uVHlwZUlkIiwidHlwZSIsIklOVEVHRVIiLCJhbGxvd051bGwiLCJzYWxlc0NoYW5uZWxUeXBlSWQiLCJpZGVudGlmaWNhdGlvblZhbHVlIiwiU1RSSU5HIiwiZGVzY3JpcHRpb24iLCJhcGlLZXkiLCJtb2RlbE5hbWUiLCJ0aW1lc3RhbXBzIiwicGFyYW5vaWQiXSwibWFwcGluZ3MiOiIwbkNBZVk7MkZBZlosS0FBTSxDQUFFQSxLQUFGLDJCQUFZQyxPQUFPLENBQUMsV0FBRCxDQUFuQixDQUFOLEMsd0JBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQixDQUFDQyxTQUFELENBQVlDLFNBQVosR0FBMEIseUJBQ3pDLEtBQU1DLENBQUFBLFlBQU4sUUFBMkJOLENBQUFBLEtBQU0sQ0FDL0I7QUFDSjtBQUNBO0FBQ0E7QUFDQSxPQUNJLE1BQU9PLENBQUFBLFNBQVAsQ0FBaUJDLE1BQWpCLENBQXlCLENBQ3ZCO0FBRHVCLHdCQUV4QixDQVI4QixDQURRLHdCQVd6Q0YsWUFBWSxDQUFDRyxJQUFiLENBQ0UsQ0FDRUMsb0JBQW9CLENBQUUsQ0FDcEJDLElBQUksQ0FBRU4sU0FBUyxDQUFDTyxPQURJLENBRXBCQyxTQUFTLENBQUUsS0FGUyxDQUR4QixDQUtFQyxrQkFBa0IsQ0FBRSxDQUNsQkgsSUFBSSxDQUFFTixTQUFTLENBQUNPLE9BREUsQ0FFbEJDLFNBQVMsQ0FBRSxLQUZPLENBTHRCLENBU0VFLG1CQUFtQixDQUFFLENBQ25CSixJQUFJLENBQUVOLFNBQVMsQ0FBQ1csTUFERyxDQUVuQkgsU0FBUyxDQUFFLEtBRlEsQ0FUdkIsQ0FhRUksV0FBVyxDQUFFLENBQ1hOLElBQUksQ0FBRU4sU0FBUyxDQUFDVyxNQURMLENBRVhILFNBQVMsQ0FBRSxJQUZBLENBYmYsQ0FpQkVLLE1BQU0sQ0FBRSxDQUNOUCxJQUFJLENBQUVOLFNBQVMsQ0FBQ1csTUFEVixDQUVOSCxTQUFTLENBQUUsS0FGTCxDQWpCVixDQURGLENBdUJFLENBQ0VULFNBREYsQ0FFRWUsU0FBUyxDQUFFLGNBRmIsQ0FHRUMsVUFBVSxDQUFFLElBSGQsQ0FJRUMsUUFBUSxDQUFFLElBSlosQ0F2QkYsRUFYeUMsd0JBeUN6QyxNQUFPZixDQUFBQSxZQUFQLENBQ0QsQ0ExQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IE1vZGVsIH0gPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcbiAgY2xhc3MgU2FsZXNDaGFubmVsIGV4dGVuZHMgTW9kZWwge1xyXG4gICAgLyoqXHJcbiAgICAgKiBIZWxwZXIgbWV0aG9kIGZvciBkZWZpbmluZyBhc3NvY2lhdGlvbnMuXHJcbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBub3QgYSBwYXJ0IG9mIFNlcXVlbGl6ZSBsaWZlY3ljbGUuXHJcbiAgICAgKiBUaGUgYG1vZGVscy9pbmRleGAgZmlsZSB3aWxsIGNhbGwgdGhpcyBtZXRob2QgYXV0b21hdGljYWxseS5cclxuICAgICAqL1xyXG4gICAgc3RhdGljIGFzc29jaWF0ZShtb2RlbHMpIHtcclxuICAgICAgLy8gZGVmaW5lIGFzc29jaWF0aW9uIGhlcmVcclxuICAgIH1cclxuICB9XHJcbiAgU2FsZXNDaGFubmVsLmluaXQoXHJcbiAgICB7XHJcbiAgICAgIGlkZW50aWZpY2F0aW9uVHlwZUlkOiB7XHJcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXHJcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcclxuICAgICAgfSxcclxuICAgICAgc2FsZXNDaGFubmVsVHlwZUlkOiB7XHJcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXHJcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcclxuICAgICAgfSxcclxuICAgICAgaWRlbnRpZmljYXRpb25WYWx1ZToge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcclxuICAgICAgfSxcclxuICAgICAgZGVzY3JpcHRpb246IHtcclxuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgICAgIGFsbG93TnVsbDogdHJ1ZSxcclxuICAgICAgfSxcclxuICAgICAgYXBpS2V5OiB7XHJcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcclxuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgc2VxdWVsaXplLFxyXG4gICAgICBtb2RlbE5hbWU6ICdTYWxlc0NoYW5uZWwnLFxyXG4gICAgICB0aW1lc3RhbXBzOiB0cnVlLFxyXG4gICAgICBwYXJhbm9pZDogdHJ1ZSxcclxuICAgIH0sXHJcbiAgKTtcclxuICByZXR1cm4gU2FsZXNDaGFubmVsO1xyXG59O1xyXG4iXX0=