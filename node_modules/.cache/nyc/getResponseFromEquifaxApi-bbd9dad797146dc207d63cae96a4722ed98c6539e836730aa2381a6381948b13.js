function cov_10va4njvz9(){var path="/vagrant/continuum/core/src/modules/evaluation/middlewares/per/v1/equifax/fn/getResponseFromEquifaxApi.js";var hash="6b7055ae1836002b2a9e77b6f78bec4b9756e2a5";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/vagrant/continuum/core/src/modules/evaluation/middlewares/per/v1/equifax/fn/getResponseFromEquifaxApi.js",statementMap:{"0":{start:{line:1,column:15},end:{line:1,column:32}},"1":{start:{line:2,column:14},end:{line:2,column:30}},"2":{start:{line:3,column:24},end:{line:3,column:52}},"3":{start:{line:5,column:92},end:{line:5,column:103}},"4":{start:{line:6,column:18},end:{line:6,column:37}},"5":{start:{line:10,column:34},end:{line:58,column:1}},"6":{start:{line:11,column:22},end:{line:35,column:28}},"7":{start:{line:37,column:4},end:{line:39,column:5}},"8":{start:{line:38,column:8},end:{line:38,column:39}},"9":{start:{line:41,column:21},end:{line:46,column:6}},"10":{start:{line:48,column:4},end:{line:57,column:5}},"11":{start:{line:49,column:8},end:{line:49,column:75}},"12":{start:{line:50,column:8},end:{line:50,column:61}},"13":{start:{line:51,column:8},end:{line:51,column:33}},"14":{start:{line:53,column:8},end:{line:53,column:74}},"15":{start:{line:54,column:8},end:{line:54,column:55}},"16":{start:{line:56,column:8},end:{line:56,column:24}},"17":{start:{line:59,column:0},end:{line:61,column:1}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:34},end:{line:10,column:35}},loc:{start:{line:10,column:49},end:{line:58,column:1}},line:10}},branchMap:{"0":{loc:{start:{line:37,column:4},end:{line:39,column:5}},type:"if",locations:[{start:{line:37,column:4},end:{line:39,column:5}},{start:{line:37,column:4},end:{line:39,column:5}}],line:37},"1":{loc:{start:{line:37,column:8},end:{line:37,column:48}},type:"binary-expr",locations:[{start:{line:37,column:8},end:{line:37,column:21}},{start:{line:37,column:25},end:{line:37,column:48}}],line:37},"2":{loc:{start:{line:48,column:4},end:{line:57,column:5}},type:"if",locations:[{start:{line:48,column:4},end:{line:57,column:5}},{start:{line:48,column:4},end:{line:57,column:5}}],line:48}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"6b7055ae1836002b2a9e77b6f78bec4b9756e2a5"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_10va4njvz9=function(){return actualCoverage;};}return actualCoverage;}cov_10va4njvz9();const xml2js=(cov_10va4njvz9().s[0]++,require('xml2js'));const axios=(cov_10va4njvz9().s[1]++,require('axios'));const mockApiResponse=(cov_10va4njvz9().s[2]++,require('./mockApiResponse'));const{USE_MOCK_DATA,EQUIFAX_PERU_EVALUATION_URL,EQUIFAX_PERU_USER,EQUIFAX_PERU_KEY}=(cov_10va4njvz9().s[3]++,process.env);const xmlParser=(cov_10va4njvz9().s[4]++,new xml2js.Parser());cov_10va4njvz9().s[5]++;const getResponseFromEquifaxApi=async body=>{cov_10va4njvz9().f[0]++;const xmlToSend=(cov_10va4njvz9().s[6]++,`<soapenv:Envelope
        xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
        xmlns:typ="http://equifax.com/WebService/types">
        <soapenv:Header/>
        <soapenv:Body>
        <typ:getRiesgo>
            <EstructuraGetRiesgo>
            <!--Optional:-->
            <header>
                <!--Optional:-->
                <usuario>${EQUIFAX_PERU_USER}</usuario>
                <!--Optional:-->
                <clave>${EQUIFAX_PERU_KEY}</clave>
            </header>
            <!--Optional:-->
            <integrante>
                <!--Optional:-->
                <tipoDocumento>${body.identifierType}</tipoDocumento>
                <!--Optional:-->
                <numeroDocumento>${body.identifierValue}</numeroDocumento>
            </integrante>
            </EstructuraGetRiesgo>
        </typ:getRiesgo>
        </soapenv:Body>
        </soapenv:Envelope>`);cov_10va4njvz9().s[7]++;if((cov_10va4njvz9().b[1][0]++,USE_MOCK_DATA)&&(cov_10va4njvz9().b[1][1]++,USE_MOCK_DATA==='YES')){cov_10va4njvz9().b[0][0]++;cov_10va4njvz9().s[8]++;return mockApiResponse['data'];//change later
}else{cov_10va4njvz9().b[0][1]++;}const response=(cov_10va4njvz9().s[9]++,await axios({method:'post',url:EQUIFAX_PERU_EVALUATION_URL,data:xmlToSend,headers:{'Content-Type':'text/xml'}}));cov_10va4njvz9().s[10]++;if(response.status!==200){cov_10va4njvz9().b[2][0]++;cov_10va4njvz9().s[11]++;debugApp(`${__dirname}/equifax::getResponseFromEquifaxApi::ERROR`);cov_10va4njvz9().s[12]++;rollbar.error(`${__dirname}equifax::RESPONSE:ERROR`);cov_10va4njvz9().s[13]++;throw new Error('ERROR');}else{cov_10va4njvz9().b[2][1]++;cov_10va4njvz9().s[14]++;response.data=await xmlParser.parseStringPromise(response.data);cov_10va4njvz9().s[15]++;response.data.equifaxResponseDate=new Date();cov_10va4njvz9().s[16]++;return response;}};cov_10va4njvz9().s[17]++;module.exports={getResponseFromEquifaxApi};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldFJlc3BvbnNlRnJvbUVxdWlmYXhBcGkuanMiXSwibmFtZXMiOlsieG1sMmpzIiwicmVxdWlyZSIsImF4aW9zIiwibW9ja0FwaVJlc3BvbnNlIiwiVVNFX01PQ0tfREFUQSIsIkVRVUlGQVhfUEVSVV9FVkFMVUFUSU9OX1VSTCIsIkVRVUlGQVhfUEVSVV9VU0VSIiwiRVFVSUZBWF9QRVJVX0tFWSIsInByb2Nlc3MiLCJlbnYiLCJ4bWxQYXJzZXIiLCJQYXJzZXIiLCJnZXRSZXNwb25zZUZyb21FcXVpZmF4QXBpIiwiYm9keSIsInhtbFRvU2VuZCIsImlkZW50aWZpZXJUeXBlIiwiaWRlbnRpZmllclZhbHVlIiwicmVzcG9uc2UiLCJtZXRob2QiLCJ1cmwiLCJkYXRhIiwiaGVhZGVycyIsInN0YXR1cyIsImRlYnVnQXBwIiwiX19kaXJuYW1lIiwicm9sbGJhciIsImVycm9yIiwiRXJyb3IiLCJwYXJzZVN0cmluZ1Byb21pc2UiLCJlcXVpZmF4UmVzcG9uc2VEYXRlIiwiRGF0ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI4Z0ZBZVk7MkZBZlosS0FBTUEsQ0FBQUEsTUFBTSwwQkFBR0MsT0FBTyxDQUFDLFFBQUQsQ0FBVixDQUFaLENBQ0EsS0FBTUMsQ0FBQUEsS0FBSywwQkFBR0QsT0FBTyxDQUFDLE9BQUQsQ0FBVixDQUFYLENBQ0EsS0FBTUUsQ0FBQUEsZUFBZSwwQkFBR0YsT0FBTyxDQUFDLG1CQUFELENBQVYsQ0FBckIsQ0FFQSxLQUFNLENBQUVHLGFBQUYsQ0FBaUJDLDJCQUFqQixDQUE4Q0MsaUJBQTlDLENBQWlFQyxnQkFBakUsMkJBQXNGQyxPQUFPLENBQUNDLEdBQTlGLENBQU4sQ0FDQSxLQUFNQyxDQUFBQSxTQUFTLDBCQUFHLEdBQUlWLENBQUFBLE1BQU0sQ0FBQ1csTUFBWCxFQUFILENBQWYsQyx3QkFJQSxLQUFNQyxDQUFBQSx5QkFBeUIsQ0FBRyxLQUFPQyxDQUFBQSxJQUFQLEVBQWUseUJBQzdDLEtBQU1DLENBQUFBLFNBQVMsMEJBQUk7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCUixpQkFBa0I7QUFDN0M7QUFDQSx5QkFBeUJDLGdCQUFpQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQ00sSUFBSSxDQUFDRSxjQUFlO0FBQ3JEO0FBQ0EsbUNBQW1DRixJQUFJLENBQUNHLGVBQWdCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBeEJtQixDQUFmLENBRDZDLHdCQTJCN0MsR0FBSSw0QkFBQVosYUFBYSwrQkFBSUEsYUFBYSxHQUFLLEtBQXRCLENBQWpCLENBQThDLG9EQUMxQyxNQUFPRCxDQUFBQSxlQUFlLENBQUMsTUFBRCxDQUF0QixDQUFnQztBQUNuQyxDQUZELGlDQUlBLEtBQU1jLENBQUFBLFFBQVEsMEJBQUcsS0FBTWYsQ0FBQUEsS0FBSyxDQUFDLENBQ3pCZ0IsTUFBTSxDQUFFLE1BRGlCLENBRXpCQyxHQUFHLENBQUVkLDJCQUZvQixDQUd6QmUsSUFBSSxDQUFFTixTQUhtQixDQUl6Qk8sT0FBTyxDQUFFLENBQUUsZUFBZ0IsVUFBbEIsQ0FKZ0IsQ0FBRCxDQUFkLENBQWQsQ0EvQjZDLHlCQXNDN0MsR0FBSUosUUFBUSxDQUFDSyxNQUFULEdBQW9CLEdBQXhCLENBQTZCLHFEQUN6QkMsUUFBUSxDQUFFLEdBQUVDLFNBQVUsNENBQWQsQ0FBUixDQUR5Qix5QkFFekJDLE9BQU8sQ0FBQ0MsS0FBUixDQUFlLEdBQUVGLFNBQVUseUJBQTNCLEVBRnlCLHlCQUd6QixLQUFNLElBQUlHLENBQUFBLEtBQUosQ0FBVSxPQUFWLENBQU4sQ0FDRCxDQUpILElBSVMscURBQ0xWLFFBQVEsQ0FBQ0csSUFBVCxDQUFnQixLQUFNVixDQUFBQSxTQUFTLENBQUNrQixrQkFBVixDQUE2QlgsUUFBUSxDQUFDRyxJQUF0QyxDQUF0QixDQURLLHlCQUVMSCxRQUFRLENBQUNHLElBQVQsQ0FBY1MsbUJBQWQsQ0FBb0MsR0FBSUMsQ0FBQUEsSUFBSixFQUFwQyxDQUZLLHlCQUlMLE1BQU9iLENBQUFBLFFBQVAsQ0FDSCxDQUNKLENBaERELEMseUJBaURBYyxNQUFNLENBQUNDLE9BQVAsQ0FBaUIsQ0FDYnBCLHlCQURhLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeG1sMmpzID0gcmVxdWlyZSgneG1sMmpzJyk7XHJcbmNvbnN0IGF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKTtcclxuY29uc3QgbW9ja0FwaVJlc3BvbnNlID0gcmVxdWlyZSgnLi9tb2NrQXBpUmVzcG9uc2UnKTtcclxuXHJcbmNvbnN0IHsgVVNFX01PQ0tfREFUQSwgRVFVSUZBWF9QRVJVX0VWQUxVQVRJT05fVVJMLCBFUVVJRkFYX1BFUlVfVVNFUiwgRVFVSUZBWF9QRVJVX0tFWSB9ID0gcHJvY2Vzcy5lbnY7XHJcbmNvbnN0IHhtbFBhcnNlciA9IG5ldyB4bWwyanMuUGFyc2VyKCk7XHJcblxyXG5cclxuXHJcbmNvbnN0IGdldFJlc3BvbnNlRnJvbUVxdWlmYXhBcGkgPSBhc3luYyAoYm9keSk9PiB7XHJcbiAgICBjb25zdCB4bWxUb1NlbmQgPSBgPHNvYXBlbnY6RW52ZWxvcGVcclxuICAgICAgICB4bWxuczpzb2FwZW52PVwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvc29hcC9lbnZlbG9wZS9cIlxyXG4gICAgICAgIHhtbG5zOnR5cD1cImh0dHA6Ly9lcXVpZmF4LmNvbS9XZWJTZXJ2aWNlL3R5cGVzXCI+XHJcbiAgICAgICAgPHNvYXBlbnY6SGVhZGVyLz5cclxuICAgICAgICA8c29hcGVudjpCb2R5PlxyXG4gICAgICAgIDx0eXA6Z2V0Umllc2dvPlxyXG4gICAgICAgICAgICA8RXN0cnVjdHVyYUdldFJpZXNnbz5cclxuICAgICAgICAgICAgPCEtLU9wdGlvbmFsOi0tPlxyXG4gICAgICAgICAgICA8aGVhZGVyPlxyXG4gICAgICAgICAgICAgICAgPCEtLU9wdGlvbmFsOi0tPlxyXG4gICAgICAgICAgICAgICAgPHVzdWFyaW8+JHtFUVVJRkFYX1BFUlVfVVNFUn08L3VzdWFyaW8+XHJcbiAgICAgICAgICAgICAgICA8IS0tT3B0aW9uYWw6LS0+XHJcbiAgICAgICAgICAgICAgICA8Y2xhdmU+JHtFUVVJRkFYX1BFUlVfS0VZfTwvY2xhdmU+XHJcbiAgICAgICAgICAgIDwvaGVhZGVyPlxyXG4gICAgICAgICAgICA8IS0tT3B0aW9uYWw6LS0+XHJcbiAgICAgICAgICAgIDxpbnRlZ3JhbnRlPlxyXG4gICAgICAgICAgICAgICAgPCEtLU9wdGlvbmFsOi0tPlxyXG4gICAgICAgICAgICAgICAgPHRpcG9Eb2N1bWVudG8+JHtib2R5LmlkZW50aWZpZXJUeXBlfTwvdGlwb0RvY3VtZW50bz5cclxuICAgICAgICAgICAgICAgIDwhLS1PcHRpb25hbDotLT5cclxuICAgICAgICAgICAgICAgIDxudW1lcm9Eb2N1bWVudG8+JHtib2R5LmlkZW50aWZpZXJWYWx1ZX08L251bWVyb0RvY3VtZW50bz5cclxuICAgICAgICAgICAgPC9pbnRlZ3JhbnRlPlxyXG4gICAgICAgICAgICA8L0VzdHJ1Y3R1cmFHZXRSaWVzZ28+XHJcbiAgICAgICAgPC90eXA6Z2V0Umllc2dvPlxyXG4gICAgICAgIDwvc29hcGVudjpCb2R5PlxyXG4gICAgICAgIDwvc29hcGVudjpFbnZlbG9wZT5gO1xyXG5cclxuICAgIGlmIChVU0VfTU9DS19EQVRBICYmIFVTRV9NT0NLX0RBVEEgPT09ICdZRVMnKSB7XHJcbiAgICAgICAgcmV0dXJuIG1vY2tBcGlSZXNwb25zZVsnZGF0YSddOyAvL2NoYW5nZSBsYXRlclxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zKHtcclxuICAgICAgICBtZXRob2Q6ICdwb3N0JyxcclxuICAgICAgICB1cmw6IEVRVUlGQVhfUEVSVV9FVkFMVUFUSU9OX1VSTCxcclxuICAgICAgICBkYXRhOiB4bWxUb1NlbmQsXHJcbiAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ3RleHQveG1sJyB9LFxyXG4gICAgfSk7XHJcblxyXG4gICAgaWYgKHJlc3BvbnNlLnN0YXR1cyAhPT0gMjAwKSB7XHJcbiAgICAgICAgZGVidWdBcHAoYCR7X19kaXJuYW1lfS9lcXVpZmF4OjpnZXRSZXNwb25zZUZyb21FcXVpZmF4QXBpOjpFUlJPUmApO1xyXG4gICAgICAgIHJvbGxiYXIuZXJyb3IoYCR7X19kaXJuYW1lfWVxdWlmYXg6OlJFU1BPTlNFOkVSUk9SYCk7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFUlJPUicpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJlc3BvbnNlLmRhdGEgPSBhd2FpdCB4bWxQYXJzZXIucGFyc2VTdHJpbmdQcm9taXNlKHJlc3BvbnNlLmRhdGEpO1xyXG4gICAgICAgIHJlc3BvbnNlLmRhdGEuZXF1aWZheFJlc3BvbnNlRGF0ZSA9IG5ldyBEYXRlKCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xyXG4gICAgfVxyXG59XHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgZ2V0UmVzcG9uc2VGcm9tRXF1aWZheEFwaVxyXG59Il19