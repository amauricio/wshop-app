'use strict';function cov_1of066s2ff(){var path="/vagrant/continuum/core/src/common/models/Simulation.js";var hash="e760013282b09adc72bfd4f0cfbc986bf9bba989";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/vagrant/continuum/core/src/common/models/Simulation.js",statementMap:{"0":{start:{line:4,column:4},end:{line:4,column:24}},"1":{start:{line:5,column:0},end:{line:25,column:2}},"2":{start:{line:16,column:2},end:{line:23,column:5}},"3":{start:{line:24,column:2},end:{line:24,column:20}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:17},end:{line:5,column:18}},loc:{start:{line:5,column:43},end:{line:25,column:1}},line:5},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:4},end:{line:12,column:5}},loc:{start:{line:12,column:29},end:{line:14,column:5}},line:12}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0,"1":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"e760013282b09adc72bfd4f0cfbc986bf9bba989"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1of066s2ff=function(){return actualCoverage;};}return actualCoverage;}cov_1of066s2ff();const{Model}=(cov_1of066s2ff().s[0]++,require('sequelize'));cov_1of066s2ff().s[1]++;module.exports=(sequelize,DataTypes)=>{cov_1of066s2ff().f[0]++;class Simulation extends Model{/**
     * Helper method for defining associations.
     * This method is not a part of Sequelize lifecycle.
     * The `models/index` file will call this method automatically.
     */static associate(models){// define association here
cov_1of066s2ff().f[1]++;}};cov_1of066s2ff().s[2]++;Simulation.init({identifierValue:DataTypes.STRING,simulationRequest:DataTypes.JSON,simulationResponse:DataTypes.JSON},{sequelize,modelName:'Simulation'});cov_1of066s2ff().s[3]++;return Simulation;};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNpbXVsYXRpb24uanMiXSwibmFtZXMiOlsiTW9kZWwiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIlNpbXVsYXRpb24iLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJpbml0IiwiaWRlbnRpZmllclZhbHVlIiwiU1RSSU5HIiwic2ltdWxhdGlvblJlcXVlc3QiLCJKU09OIiwic2ltdWxhdGlvblJlc3BvbnNlIiwibW9kZWxOYW1lIl0sIm1hcHBpbmdzIjoiQUFBQSxhLHFuQ0FlWTsyRkFkWixLQUFNLENBQ0pBLEtBREksMkJBRUZDLE9BQU8sQ0FBQyxXQUFELENBRkwsQ0FBTixDLHdCQUdBQyxNQUFNLENBQUNDLE9BQVAsQ0FBaUIsQ0FBQ0MsU0FBRCxDQUFZQyxTQUFaLEdBQTBCLHlCQUN6QyxLQUFNQyxDQUFBQSxVQUFOLFFBQXlCTixDQUFBQSxLQUFNLENBQzdCO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsT0FDSSxNQUFPTyxDQUFBQSxTQUFQLENBQWlCQyxNQUFqQixDQUF5QixDQUN2QjtBQUR1Qix3QkFFeEIsQ0FSNEIsQ0FTOUIsQ0FWd0Msd0JBV3pDRixVQUFVLENBQUNHLElBQVgsQ0FBZ0IsQ0FDZEMsZUFBZSxDQUFFTCxTQUFTLENBQUNNLE1BRGIsQ0FFZEMsaUJBQWlCLENBQUVQLFNBQVMsQ0FBQ1EsSUFGZixDQUdkQyxrQkFBa0IsQ0FBRVQsU0FBUyxDQUFDUSxJQUhoQixDQUFoQixDQUlHLENBQ0RULFNBREMsQ0FFRFcsU0FBUyxDQUFFLFlBRlYsQ0FKSCxFQVh5Qyx3QkFtQnpDLE1BQU9ULENBQUFBLFVBQVAsQ0FDRCxDQXBCRCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IHtcbiAgTW9kZWxcbn0gPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNsYXNzIFNpbXVsYXRpb24gZXh0ZW5kcyBNb2RlbCB7XG4gICAgLyoqXG4gICAgICogSGVscGVyIG1ldGhvZCBmb3IgZGVmaW5pbmcgYXNzb2NpYXRpb25zLlxuICAgICAqIFRoaXMgbWV0aG9kIGlzIG5vdCBhIHBhcnQgb2YgU2VxdWVsaXplIGxpZmVjeWNsZS5cbiAgICAgKiBUaGUgYG1vZGVscy9pbmRleGAgZmlsZSB3aWxsIGNhbGwgdGhpcyBtZXRob2QgYXV0b21hdGljYWxseS5cbiAgICAgKi9cbiAgICBzdGF0aWMgYXNzb2NpYXRlKG1vZGVscykge1xuICAgICAgLy8gZGVmaW5lIGFzc29jaWF0aW9uIGhlcmVcbiAgICB9XG4gIH07XG4gIFNpbXVsYXRpb24uaW5pdCh7XG4gICAgaWRlbnRpZmllclZhbHVlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIHNpbXVsYXRpb25SZXF1ZXN0OiBEYXRhVHlwZXMuSlNPTixcbiAgICBzaW11bGF0aW9uUmVzcG9uc2U6IERhdGFUeXBlcy5KU09OXG4gIH0sIHtcbiAgICBzZXF1ZWxpemUsXG4gICAgbW9kZWxOYW1lOiAnU2ltdWxhdGlvbicsXG4gIH0pO1xuICByZXR1cm4gU2ltdWxhdGlvbjtcbn07Il19